use std::collections::HashMap;

use anyhow::{Context, Result};
use chrono::{DateTime, FixedOffset};
use roxmltree::Document;

type SysmonEventId = u8;

#[derive(Debug)]
pub struct SysmonEvent {
    pub event_id: SysmonEventId,
    pub time_created: DateTime<FixedOffset>,
    pub event_data: HashMap<String, String>,
}

impl SysmonEvent {
    pub fn from_xml(xml: &str) -> Result<Self> {
        let mut event_id_opt = None;
        let mut time_created_opt = None;
        let mut event_data = HashMap::new();

        let event = Document::parse(xml)?;
        let system_xml = event
            .root_element()
            .children()
            .filter(|n| n.tag_name().name() == "System")
            .nth(0)
            .context("No System node")?;
        let event_data_xml = event
            .root_element()
            .children()
            .filter(|n| n.tag_name().name() == "EventData")
            .nth(0)
            .context("No EventData node")?;

        for node in system_xml.children() {
            match node.tag_name().name() {
                "EventID" => {
                    event_id_opt = node
                        .text()
                        .context("EventID is empty")?
                        .parse::<SysmonEventId>()
                        .ok()
                }
                "TimeCreated" => {
                    time_created_opt = DateTime::parse_from_rfc3339(
                        node.attribute("SystemTime")
                            .context("TimeCreated has no SystemTime attribute")?,
                    )
                    .ok()
                }
                _ => (),
            }
        }

        let event_id = event_id_opt.context("No EventID")?;
        let time_created = time_created_opt.context("No TimeCreated")?;

        for node in event_data_xml.children() {
            if node.tag_name().name() == "Data" {
                event_data.insert(
                    node.attribute("Name")
                        .context("EventData/Data has no Name attribute")?
                        .to_string(),
                    node.text()
                        .context("EventData/Data has no text")?
                        .to_string(),
                );
            }
        }

        Ok(SysmonEvent {
            event_id,
            time_created,
            event_data,
        })
    }
}
