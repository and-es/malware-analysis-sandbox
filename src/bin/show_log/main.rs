mod args;

use std::fs::File;
use std::io;

use anyhow::{Context, Result};
use clap::Parser;
use log::info;
use sha3::{Digest, Sha3_512};

use args::Args;
use malware_analysis_sandbox::analysis_result::AnalysisResultManager;

#[tokio::main]
async fn main() -> Result<()> {
    env_logger::init();

    let args = Args::parse();

    let mut sample = File::open(&args.path)?;

    info!("Calcurating hash of sample...");
    let mut hasher = Sha3_512::new();
    io::copy(&mut sample, &mut hasher)?;
    let hash = format!("{:x}", hasher.finalize());

    let analysis_result_manager = AnalysisResultManager::init().await?;

    info!("Searching result...");
    let analysis_result = analysis_result_manager
        .search_hash(&hash)
        .await?
        .context("No analysis result")?;

    println!("{:#?}", analysis_result);

    Ok(())
}
